// SPDX-License-Identifier: GPL-2.0
/dts-v1/;

#include <dt-bindings/input/input.h>
#include "tegra132.dtsi"
#include "tegra132-flounder-emc.dtsi"

/ {

	model = "Google Nexus 9";
	compatible = "google,flounder64", "nvidia,tegra132";

	aliases {
		i2c0 = "/i2c@7000c000";
		i2c1 = "/i2c@7000c400";
		i2c2 = "/i2c@7000c500";
		i2c4 = "/i2c@7000d000";

		spi2 = "/spi@7000d800";
		spi3 = "/spi@7000da00";
		spi4 = "/spi@7000dc00";

		rtc0 = &palmas_rtc;
		rtc1 = "/rtc@7000e000";

		mmc0 = "/mmc@700b0600";
		mmc1 = "/mmc@700b0000";
	};

	chosen {
		stdout-path = "/serial@70006000:115200n8";

		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		lcd: framebuffer@ac001000 {
			compatible = "simple-framebuffer";
			reg = <0x0 0xac001000 0x0 0xc20000>;
			width = <1536>;
			height = <2048>;
			stride = <(1536 * 4)>;
			format = "a8b8g8r8";
			clocks = <&tegra_car TEGRA124_CLK_DISP1>, <&tegra_car TEGRA124_CLK_DSIA>, <&tegra_car TEGRA124_CLK_DSIB>;
			dsi-supply = <&avdd_dsi_csi>;
			lcd-supply = <&avdd_lcd>;
			io-supply = <&iovdd_lcd>;
		};
	};

	battery: battery {
		compatible = "simple-battery";
		precharge-current-microamp = <512000>;
		charge-term-current-microamp = <128000>;
		constant-charge-current-max-microamp = <2944000>;
		constant-charge-voltage-max-microvolt = <4352000>;
	};

	memory@80000000 {
		device_type = "memory";
		reg = <0x0 0x80000000 0x0 0x80000000>; /* 2048MB */
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		framebuffer@ac001000 {
			reg = <0x0 0xac001000 0x0 0xc20000>;
			no-map;
		};
	};

	/* NEEDS WORK */
	host1x@50000000 {
		dsi@54300000 {
			status = "okay";
			avdd-dsi-csi-supply = <&avdd_dsi_csi>;
			nvidia,ganged-mode = <&dsib>;

			panel_primary: panel@0 {
				compatible = "jdi,lpm089a128a";
				reg = <0>;
				avdd-supply = <&avdd_lcd>;
				iovdd-supply = <&iovdd_lcd>;
				reset-gpios = <&gpio TEGRA_GPIO(H, 5) GPIO_ACTIVE_HIGH>;
				dcdc-en-gpios = <&gpio TEGRA_GPIO(EE, 5) GPIO_ACTIVE_HIGH>;

				port_b = <&panel_secondary>;
			};
		};

		dsi@54400000 {
			status = "okay";
			avdd-dsi-csi-supply = <&avdd_dsi_csi>;

			panel_secondary: panel@0 {
				compatible = "jdi,lpm089a128a";
				reg = <0>;

				port_a = <&panel_primary>;
			};
		};
	};

	gpu@57000000 {
		status = "okay";
		vdd-supply = <&vdd_gpu>;
	};

	pinmux@70000868 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinmux_default>;

		pinmux_default: pinmux {
			/* Debug UART */
			pu0 {
				nvidia,pins = "pu0";
				nvidia,function = "uarta";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			pu1 {
				nvidia,pins = "pu1";
				nvidia,function = "uarta";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* Bluetooth UART */
			uart3_cts_n_pa1 {
				nvidia,pins = "uart3_cts_n_pa1",
					      "uart3_rxd_pw7";
				nvidia,function = "uartc";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			uart3_rts_n_pc0 {
				nvidia,pins = "uart3_rts_n_pc0",
					      "uart3_txd_pw6";
				nvidia,function = "uartc";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: UARTD */
			pj7 {
				nvidia,pins = "pj7";
				nvidia,function = "uartd";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			pb0 {
				nvidia,pins = "pb0";
				nvidia,function = "uartd";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* TODO: PWM0? */
			ph0 {
				nvidia,pins = "ph0";
				nvidia,function = "dtv";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* TODO: PWM1 */
			ph1 {
				nvidia,pins = "ph1";
				nvidia,function = "pwm1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* I2C 0 */
			gen1_i2c_scl_pc4 {
				nvidia,pins = "gen1_i2c_scl_pc4",
					      "gen1_i2c_sda_pc5";
				nvidia,function = "i2c1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
				nvidia,lock = <TEGRA_PIN_DISABLE>;
				nvidia,open-drain = <TEGRA_PIN_DISABLE>;
			};
			/* I2C 1 */
			gen2_i2c_scl_pt5 {
				nvidia,pins = "gen2_i2c_scl_pt5",
					      "gen2_i2c_sda_pt6";
				nvidia,function = "i2c2";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
				nvidia,lock = <TEGRA_PIN_DISABLE>;
				nvidia,open-drain = <TEGRA_PIN_DISABLE>;
			};
			/* I2C 2 */
			cam_i2c_scl_pbb1 {
				nvidia,pins = "cam_i2c_scl_pbb1",
					      "cam_i2c_sda_pbb2";
				nvidia,function = "i2c3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
				nvidia,lock = <TEGRA_PIN_DISABLE>;
				nvidia,open-drain = <TEGRA_PIN_DISABLE>;
			};
			/* I2C 4 */
			pwr_i2c_scl_pz6 {
				nvidia,pins = "pwr_i2c_scl_pz6",
					      "pwr_i2c_sda_pz7";
				nvidia,function = "i2cpwr";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
				nvidia,lock = <TEGRA_PIN_DISABLE>;
				nvidia,open-drain = <TEGRA_PIN_DISABLE>;
			};
			/* SPI 2 */
			sdmmc3_clk_pa6 {
				nvidia,pins = "sdmmc3_clk_pa6",
					      "sdmmc3_dat1_pb6",
					      "sdmmc3_dat2_pb5",
					      "sdmmc3_dat3_pb4";
				nvidia,function = "spi3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			sdmmc3_dat0_pb7 {
				nvidia,pins = "sdmmc3_dat0_pb7";
				nvidia,function = "spi3";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* SPI 3 */
			pg4 {
				nvidia,pins = "pg4",
					      "pg5",
					      "pg6";
				nvidia,function = "spi4";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			pg7 {
				nvidia,pins = "pg7";
				nvidia,function = "spi4";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* SPI 4 */
			ulpi_clk_py0 {
				nvidia,pins = "ulpi_clk_py0",
					      "ulpi_nxt_py2",
					      "ulpi_stp_py3";
				nvidia,function = "spi5";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			ulpi_dir_py1 {
				nvidia,pins = "ulpi_dir_py1";
				nvidia,function = "spi5";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* WiFi */
			sdmmc1_clk_pz0 {
				nvidia,pins = "sdmmc1_clk_pz0";
				nvidia,function = "sdmmc1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			sdmmc1_cmd_pz1 {
				nvidia,pins = "sdmmc1_cmd_pz1",
					      "sdmmc1_dat0_py7",
					      "sdmmc1_dat1_py6",
					      "sdmmc1_dat2_py5",
					      "sdmmc1_dat3_py4";
				nvidia,function = "sdmmc1";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* eMMC */
			sdmmc4_clk_pcc4 {
				nvidia,pins = "sdmmc4_clk_pcc4";
				nvidia,function = "sdmmc4";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			sdmmc4_cmd_pt7 {
				nvidia,pins = "sdmmc4_cmd_pt7",
					      "sdmmc4_dat0_paa0",
					      "sdmmc4_dat1_paa1",
					      "sdmmc4_dat2_paa2",
					      "sdmmc4_dat3_paa3",
					      "sdmmc4_dat4_paa4",
					      "sdmmc4_dat5_paa5",
					      "sdmmc4_dat6_paa6",
					      "sdmmc4_dat7_paa7";
				nvidia,function = "sdmmc4";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* USB */
			sdmmc3_cmd_pa7 {
				nvidia,pins = "sdmmc3_cmd_pa7";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* TODO: I2S 0 */
			dap1_din_pn1 {
				nvidia,pins = "dap1_din_pn1";
				nvidia,function = "i2s0";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			dap1_dout_pn2 {
				nvidia,pins = "dap1_dout_pn2",
					      "dap1_fs_pn0",
					      "dap1_sclk_pn3";
				nvidia,function = "i2s0";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: I2S 1 */
			dap2_din_pa4 {
				nvidia,pins = "dap2_din_pa4";
				nvidia,function = "i2s1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			dap2_dout_pa5 {
				nvidia,pins = "dap2_dout_pa5",
					      "dap2_fs_pa2",
					      "dap2_sclk_pa3";
				nvidia,function = "i2s1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: I2S 2 */
			dap3_din_pp1 {
				nvidia,pins = "dap3_din_pp1";
				nvidia,function = "i2s2";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			dap3_dout_pp2 {
				nvidia,pins = "dap3_dout_pp2",
					      "dap3_fs_pp0",
					      "dap3_sclk_pp3";
				nvidia,function = "i2s2";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: I2S 3 */
			dap4_din_pp5 {
				nvidia,pins = "dap4_din_pp5";
				nvidia,function = "i2s3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			dap4_dout_pp6 {
				nvidia,pins = "dap4_dout_pp6",
					      "dap4_fs_pp4",
					      "dap4_sclk_pp7";
				nvidia,function = "i2s3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: VI_ALT3 */
			cam_mclk_pcc0 {
				nvidia,pins = "cam_mclk_pcc0";
				nvidia,function = "vi_alt3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
				nvidia,lock = <TEGRA_PIN_DISABLE>;
				/*nvidia,io-reset = <TEGRA_PIN_DISABLE>;*/
			};
			/* TODO: VIMCLK2_ALT */
			pbb0 {
				nvidia,pins = "pbb0";
				nvidia,function = "vimclk2_alt";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
				nvidia,lock = <TEGRA_PIN_DISABLE>;
				/*nvidia,io-reset = <TEGRA_PIN_DISABLE>;*/
			};
			/* TODO: SOC */
			pj2 {
				nvidia,pins = "pj2",
					      "clk_32k_out_pa0";
				nvidia,function = "soc";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* TODO: EXTPERIPH1 */
			dap_mclk1_pw4 {
				nvidia,pins = "dap_mclk1_pw4";
				nvidia,function = "extperiph1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: EXTPERIPH2 */
			clk2_out_pw5 {
				nvidia,pins = "clk2_out_pw5";
				nvidia,function = "extperiph2";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: EXTPERIPH3 */
			clk3_out_pee0 {
				nvidia,pins = "clk3_out_pee0";
				nvidia,function = "extperiph3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: RTCK */
			jtag_rtck {
				nvidia,pins = "jtag_rtck";
				nvidia,function = "rtck";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: CLK */
			clk_32k_in {
				nvidia,pins = "clk_32k_in";
				nvidia,function = "clk";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* TODO: PWRON */
			core_pwr_req {
				nvidia,pins = "core_pwr_req";
				nvidia,function = "pwron";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: CPU */
			cpu_pwr_req {
				nvidia,pins = "cpu_pwr_req";
				nvidia,function = "cpu";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: PMI */
			pwr_int_n {
				nvidia,pins = "pwr_int_n";
				nvidia,function = "pmi";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* TODO: RESET_OUT_N */
			reset_out_n {
				nvidia,pins = "reset_out_n";
				nvidia,function = "reset_out_n";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: Audio */
			pk0 {
				nvidia,pins = "pk0",
					      "gpio_x1_aud_px1",
					      "gpio_x4_aud_px4",
					      "gpio_x5_aud_px5",
					      "kb_row11_ps3",
					      "sdmmc1_wp_n_pv3",
					      "ulpi_data7_po0",
					      "kb_col3_pq3",
					      "gpio_x3_aud_px3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			kb_row12_ps4 {
				nvidia,pins = "kb_row12_ps4";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: NFC */
			pb1 {
				nvidia,pins = "pb1",
					      "kb_row9_ps1";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			kb_row7_pr7 {
				nvidia,pins = "kb_row7_pr7";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* TODO: Key */
			kb_col0_pq0 {
				nvidia,pins = "kb_col0_pq0",
					      "sdmmc3_cd_n_pv2",
					      "kb_col5_pq5";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			pi3 {
				nvidia,pins = "pi3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* TODO: Headset */
			gpio_w3_aud_pw3 {
				nvidia,pins = "gpio_w3_aud_pw3",
					      "kb_row10_ps2";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			kb_row11_ps3 {
				nvidia,pins = "kb_row11_ps3",
					      "kb_col4_pq4";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* Radio */
			ulpi_data0_po1 {
				nvidia,pins = "ulpi_data0_po1",
					      "ulpi_data1_po2",
					      "ulpi_data2_po3",
					      "ulpi_data3_po4",
					      "ulpi_data4_po5",
					      "ulpi_data5_po6",
					      "pbb5",
					      "kb_col7_pq7",
					      "kb_row8_ps0",
					      "kb_row13_ps5",
					      "kb_row14_ps6",
					      "pcc2",
					      "pv0",
					      "pv1";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			/* TODO */
			gpio_x6_aud_px6 {
				nvidia,pins = "gpio_x6_aud_px6",
					      "pj0",
					      "pk3",
					      "pi6",
					      "clk2_req_pcc5",
					      "pk2",
					      "sdmmc3_cd_n_pv2";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			gpio_x7_aud_px7 {
				nvidia,pins = "gpio_x7_aud_px7",
					      "pbb3",
					      "pbb7",
					      "ph2",
					      "ph3",
					      "ph6",
					      "ph7",
					      "pk1",
					      "pi0",
					      "kb_row1_pr1",
					      "kb_row2_pr2",
					      "kb_row5_pr5",
					      "clk3_req_pee1",
					      "pu2",
					      "pu3",
					      "pu4";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			gpio_w2_aud_pw2 {
				nvidia,pins = "gpio_w2_aud_pw2",
					      "pi5",
					      "pc7",
					      "kb_col1_pq1",
					      "kb_row4_pr4",
					      "pu6",
					      "spdif_out_pk5";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			pcc1 {
				nvidia,pins = "pcc1",
					      "pcc2",
					      "usb_vbus_en0_pn4",
					      "pu5";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			kb_col2_pq2 {
				nvidia,pins = "kb_col2_pq2",
					      "kb_row0_pr0";
				nvidia,pull = <TEGRA_PIN_PULL_UP>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
			/* Unused */
			dap_mclk1_req_pee2 {
				nvidia,pins = "dap_mclk1_req_pee2",
					      "pex_l0_clkreq_n_pdd2",
					      "pex_l0_rst_n_pdd1",
					      "pex_l1_clkreq_n_pdd6",
					      "pex_l1_rst_n_pdd5",
					      "pex_wake_n_pdd3",
					      "pff2",
					      "kb_row15_ps7",
					      "kb_row16_pt0",
					      "kb_row17_pt1",
					      "owr";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
		};
	};

	/* Debug UART */
	serial@70006000 {
		status = "okay";
	};

	/* TODO: UARTC */
	serial@70006200 {
		status = "disabled";
	};

	/* TODO: UARTD */
	serial@70006300 {
		status = "disabled";
	};

	i2c@7000c000 {
		status = "okay";
		clock-frequency = <400000>;

		/* NOTE: Enabling this breaks the battery meter in Android until the battery is disconnected */
		max17050@36 {
			compatible = "maxim,max17050";
			reg = <0x36>;
			maxim,cold-temp = <(-1)>;
			maxim,over-heat-temp = <551>;
			maxim,over-volt = <4352>;
		};

		/* BROKEN */
		cm32181@48 {
			compatible = "capella,cm3218";
			status = "disabled";
			reg = <0x48>;
		};

		nct72@4c {
			compatible = "onnn,nct1008";
			reg = <0x4c>;
			vcc-supply = <&vdd_sensor_2v85>;
			#thermal-sensor-cells = <1>;
		};

		bq24193@6b {
			compatible = "ti,bq24192";
			reg = <0x6b>;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(J, 0) GPIO_ACTIVE_HIGH>;
			monitored-battery = <&battery>;
			omit-battery-class;

			vbus_usb_otg: usb-otg-vbus { };
		};

		/* NO DRIVER */
		htc_mcu@72 {
			compatible = "htc,sensorhub";
			status = "disabled";
			reg = <0x72>;
		};

		/* NO DRIVER */
		bcm20791@77 {
			compatible = "broadcom,bcm20791";
			status = "disabled";
			reg = <0x77>;
		};
	};

	i2c@7000c400 {
		status = "okay";
		clock-frequency = <400000>;

		/* TODO */
		rt5677@2d {
			compatible = "realtek,rt5677";
			status = "disabled";
			reg = <0x2d>;
		};

		/* TODO */
		tfa9895@34 {
			compatible = "nxp,tfa9895";
			status = "disabled";
			reg = <0x34>;
		};

		/* TODO */
		tfa9895l@35 {
			compatible = "nxp,tfa9895";
			status = "disabled";
			reg = <0x35>;
		};

		ina230@40 {
			compatible = "ti,ina230";
			reg = <0x40>;
			shunt-resistor = <10000>;
		};

		/* TODO */
		rt5506@52 {
			compatible = "realtek,rt5506";
			status = "disabled";
			reg = <0x52>;
		};
	};

	i2c@7000c500 {
		status = "okay";
		clock-frequency = <400000>;

		/* TODO */
		drv201@e {
			compatible = "ti,drv201";
			status = "disabled";
			reg = <0x0e>;
		};

		/* TODO */
		imx219@10 {
			compatible = "sony,imx219";
			status = "disabled";
			reg = <0x10>;
		};

		/* TODO */
		ov9760@36 {
			compatible = "omnivision,ov9760";
			status = "disabled";
			reg = <0x36>;
		};
	};

	i2c@7000d000 {
		status = "okay";
		clock-frequency = <400000>;

		palmas: tps65913@58 {
			compatible = "ti,tps65913", "ti,palmas";
			reg = <0x58>;
			interrupts = <GIC_SPI 86 IRQ_TYPE_NONE>;

			#interrupt-cells = <2>;
			interrupt-controller;

			ti,system-power-controller;

			palmas_gpio: gpio {
				compatible = "ti,tps65913-gpio";
				gpio-controller;
				#gpio-cells = <2>;
			};

			palmas_rtc: rtc {
				compatible = "ti,palmas-rtc";
				interrupt-parent = <&palmas>;
				interrupts = <8 0>;
			};

			pinctrl {
				compatible = "ti,tps65913-pinctrl";
				pinctrl-names = "default";
				pinctrl-0 = <&palmas_pinmux>;

				palmas_pinmux: pinmux {
					powergood {
						pins = "powergood";
						function = "powergood";
					};

					vac {
						pins = "vac";
						function = "vac";
					};

					pin_gpio0 {
						pins = "gpio0";
						function = "id";
						bias-pull-up;
					};

					pin_gpio1 {
						pins = "gpio1";
						function = "vbus_det";
					};

					pin_gpio7 {
						pins = "gpio2", "gpio3", "gpio4", "gpio6", "gpio7";
						function = "gpio";
					};

					pin_gpio5 {
						pins = "gpio5";
						function = "clk32kgaudio";
					};
				};
			};

			palmas_usb: palmas-usb {
				compatible = "ti,palmas-usb-vid";
				ti,wakeup;
				ti,enable-vbus-detection;
			};

			clock {
				compatible = "ti,palmas-clk32kg";
				#clock-cells = <0>;
			};

			pmic {
				compatible = "ti,tps65913-pmic", "ti,palmas-pmic";

				smps1-in-supply = <&vdd_battery>;
				smps4-in-supply = <&vdd_battery>;
				smps6-in-supply = <&vdd_battery>;
				smps8-in-supply = <&vdd_battery>;
				smps9-in-supply = <&vdd_battery>;
				smps10-in-supply = <&vdd_battery>;
				smps10-out2-supply = <&vdd_battery>;
				ldo1-in-supply = <&vdd_battery>;
				ldo2-in-supply = <&vdd_1v8>;
				ldo3-in-supply = <&vdd_battery>;
				ldo4-in-supply = <&vdd_battery>;
				ldo5-in-supply = <&vdd_1v8>;
				ldo6-in-supply = <&vdd_battery>;
				ldo7-in-supply = <&vdd_1v8>;
				ldo8-in-supply = <&vdd_battery>;
				ldo9-in-supply = <&vdd_battery>;
				ldoln-in-supply = <&vdd_out2_5v0>;
				ldousb-in-supply = <&vdd_battery>;

				regulators {
					vdd_cpu: smps123 {
						regulator-name = "vdd-cpu";
						regulator-min-microvolt = <650000>;
						regulator-max-microvolt = <1400000>;
						regulator-always-on;
						regulator-boot-on;
						ti,roof-floor = <1>;
					};

					vdd_gpu: smps457 {
						regulator-name = "vdd-gpu";
						regulator-min-microvolt = <700000>;
						regulator-max-microvolt = <1400000>;
					};

					vdd_core: smps6 {
						regulator-name = "vdd-core";
						regulator-min-microvolt = <700000>;
						regulator-max-microvolt = <1400000>;
						regulator-always-on;
						regulator-boot-on;
						ti,roof-floor = <3>;
					};

					vdd_1v8: smps8 {
						regulator-name = "vdd-1v8";
						regulator-min-microvolt = <1800000>;
						regulator-max-microvolt = <1800000>;
						regulator-always-on;
						regulator-boot-on;
					};

					vdd_1v2: smps9 {
						regulator-name = "vdd-1v2";
						regulator-min-microvolt = <1200000>;
						regulator-max-microvolt = <1200000>;
					};

					vdd_hdmi: smps10_out1 {
						regulator-name = "vdd-hdmi";
						regulator-min-microvolt = <5000000>;
						regulator-max-microvolt = <5000000>;
					};

					vdd_out2_5v0: smps10_out2 {
						regulator-name = "vdd-out2-5v0";
						regulator-min-microvolt = <5000000>;
						regulator-max-microvolt = <5000000>;
						regulator-always-on;
						regulator-boot-on;
					};

					avdd_pll: ldo1 {
						regulator-name = "avdd-pll";
						regulator-min-microvolt = <1050000>;
						regulator-max-microvolt = <1050000>;
						regulator-always-on;
						regulator-boot-on;
						ti,roof-floor = <3>;
					};

					vdd_audio: ldo2 {
						regulator-name = "vdd-audio";
						regulator-min-microvolt = <1200000>;
						regulator-max-microvolt = <1200000>;
					};

					vdd_sensor_io: ldo3 {
						regulator-name = "vdd-sensor-io";
						regulator-min-microvolt = <1800000>;
						regulator-max-microvolt = <1800000>;
					};

					vdd_sensor_2v85: ldo4 {
						regulator-name = "vdd-sensor-2v85";
						regulator-min-microvolt = <2850000>;
						regulator-max-microvolt = <2850000>;
						regulator-always-on;
					};

					avdd_dsi_csi: ldo5 {
						regulator-name = "avdd-dsi-csi";
						regulator-min-microvolt = <1200000>;
						regulator-max-microvolt = <1200000>;
						regulator-boot-on;
					};

					vdd_1v5_ldo6: ldo6 {
						regulator-name = "vdd-1v5-ldo6";
						regulator-min-microvolt = <1500000>;
						regulator-max-microvolt = <1800000>;
					};

					dvdd_slimport: ldo7 {
						regulator-name = "dvdd-slimport";
						regulator-min-microvolt = <1000000>;
						regulator-max-microvolt = <1100000>;
					};

					vdd_rtc: ldo8 {
						regulator-name = "vdd-rtc";
						regulator-min-microvolt = <950000>;
						regulator-max-microvolt = <950000>;
						regulator-always-on;
						regulator-boot-on;
					};

					vdd_3p3_ldo9: ldo9 {
						regulator-name = "vdd-3p3-ldo9";
						regulator-min-microvolt = <1800000>;
						regulator-max-microvolt = <3300000>;
					};

					vddio_hv: ldoln {
						regulator-name = "vddio-hv";
						regulator-min-microvolt = <3300000>;
						regulator-max-microvolt = <3300000>;
						ti,roof-floor = <3>;
					};

					avdd_usb: ldousb {
						regulator-name = "avdd-usb";
						regulator-min-microvolt = <3300000>;
						regulator-max-microvolt = <3300000>;
					};
				};
			};

			adc {
				compatible = "ti,palmas-gpadc";
				interrupts = <18 0
				              16 0
				              17 0>;
				#io-channel-cells = <1>;
			};
		};
	};

	spi@7000d800 {
		status = "okay";
		spi-max-frequency = <25000000>;

		touchscreen@0 {
			compatible = "syna,rmi4-spi";
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;
			spi-max-frequency = <4000000>;
			spi-cpha;
			spi-cpol;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(K, 2) GPIO_SINGLE_ENDED>;
			spi-rx-delay-us = <30>;
			spi-tx-delay-us = <30>;

			rmi-f01@1 {
				reg = <0x1>;
				syna,nosleep = <1>;
			};

			rmi-f12@12 {
				reg = <0x12>;
				syna,sensor-type = <1>;
			};
		};
	};

	spi@7000da00 {
		status = "okay";
		spi-max-frequency = <25000000>;
	};

	spi@7000dc00 {
		status = "okay";
		spi-max-frequency = <25000000>;

		/* TODO */
		rt5677@0 {
			compatible = "realtek,rt5677";
			status = "disabled";
			reg = <0>;
		};
	};

	pmc@7000e400 {
		nvidia,invert-interrupt;
		nvidia,suspend-mode = <0>;
		nvidia,cpu-pwr-good-time = <500>;
		nvidia,cpu-pwr-off-time = <300>;
		nvidia,core-pwr-good-time = <641 3845>;
		nvidia,core-pwr-off-time = <2000>;
		nvidia,core-power-req-active-high;
		nvidia,sys-clock-req-active-high;

		i2c-thermtrip {
			nvidia,i2c-controller-id = <4>;
			nvidia,bus-addr = <0x58>;
			nvidia,reg-addr = <0xa0>;
			nvidia,reg-data = <0x0>;
		};
	};

	clock@70040084 {
		status = "okay";
		vdd-cpu-supply = <&vdd_cpu>;
		nvidia,i2c-fs-rate = <400000>;
	};

	/* NEEDS WORK */
	padctl@7009f000 {
		status = "okay";

		avdd-pll-utmip-supply = <&vdd_1v8>;
		avdd-pll-erefe-supply = <&avdd_pll>;
		avdd-pex-pll-supply = <&avdd_pll>;
		hvdd-pex-pll-e-supply = <&avdd_usb>;

		pads {
			usb2 {
				status = "okay";

				lanes {
					usb2-0 {
						nvidia,function = "snps";
						status = "okay";
					};
				};
			};
		};

		ports {
			usb2-0 {
				vbus-supply = <&vbus_usb_otg>;
				status = "okay";
				mode = "otg";
				usb-role-switch;
			};
		};
	};

	pwrseq_wifi: pwrseq-wifi {
		compatible = "mmc-pwrseq-simple";
		reset-gpios = <&gpio TEGRA_GPIO(X, 7) GPIO_ACTIVE_LOW>;
		post-power-on-delay-ms = <300>;
		power-off-delay-us = <300>;
	};

	mmc@700b0000 {
		status = "okay";
		bus-width = <4>;
		sd-uhs-sdr104;
		nvidia,only-1-8v;
		non-removable;
		mmc-pwrseq = <&pwrseq_wifi>;
		vqmmc-supply = <&vdd_1v8>;
		#address-cells = <1>;
		#size-cells = <0>;

		wifi@1 {
			compatible = "brcm,bcm4354-fmac", "brcm,bcm4329-fmac";
			reg = <1>;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(U, 5) IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "host-wake";
		};
	};

	mmc@700b0600 {
		status = "okay";
		bus-width = <8>;
		mmc-hs200-1_8v;
		nvidia,only-1-8v;
		non-removable;
		vqmmc-supply = <&vdd_1v8>;
	};

	/* TODO */
	ahub@70300000 {
		/* TODO */
		i2s@70301000 {
			status = "okay";
		};

		/* TODO */
		i2s@70301100 {
			status = "okay";
		};

		/* TODO */
		i2s@70301200 {
			status = "okay";
		};

		/* TODO */
		i2s@70301300 {
			status = "okay";
		};
	};

	/* NEEDS WORK */
	extcon_usb_otg: extcon-usb-gpio {
		compatible = "linux,extcon-usb-gpio";
		id-gpio = <&gpio TEGRA_GPIO(W, 2) GPIO_ACTIVE_HIGH>;
	};

	usb@7d000000 {
		compatible = "nvidia,tegra124-udc";
		status = "okay";
		dr_mode = "otg";
		extcon = <&palmas_usb>, <&extcon_usb_otg>;
		vbus-supply = <&vbus_usb_otg>;
	};

	usb-phy@7d000000 {
		status = "okay";
		dr_mode = "otg";
		vbus-supply = <&avdd_usb>;
	};

	clk32k_in: clock-32k {
		compatible = "fixed-clock";
		clock-frequency = <32768>;
		#clock-cells = <0>;
	};

	cpus {
		cpu@0 {
			vdd-cpu-supply = <&vdd_cpu>;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";

		power {
			label = "Power";
			gpios = <&gpio TEGRA_GPIO(Q, 0) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_POWER>;
			debounce-interval = <20>;
			wakeup-source;
		};

		volume_down {
			label = "Volume Down";
			gpios = <&gpio TEGRA_GPIO(Q, 5) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEDOWN>;
			debounce-interval = <20>;
		};

		volume_up {
			label = "Volume Up";
			gpios = <&gpio TEGRA_GPIO(V, 2) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEUP>;
			debounce-interval = <20>;
		};
	};

	vibrator {
		compatible = "gpio-vibrator";
		enable-gpios = <&gpio TEGRA_GPIO(U, 3) GPIO_ACTIVE_HIGH>;
		vcc-supply = <&vdd_battery>;
	};

	vdd_battery: regulator-vdd-battery {
		compatible = "regulator-fixed";
		regulator-name = "vdd-battery";
		regulator-always-on;
		regulator-boot-on;
	};

	avdd_lcd: regulator-avdd-lcd {
		compatible = "regulator-fixed";
		regulator-name = "avdd-lcd";
		gpio = <&gpio TEGRA_GPIO(R, 0) GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-boot-on;
		vin-supply = <&vdd_battery>;
	};

	iovdd_lcd: regulator-iovdd-lcd {
		compatible = "regulator-fixed";
		regulator-name = "iovdd-lcd";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		gpio = <&gpio TEGRA_GPIO(Q, 2) GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-boot-on;
		vin-supply = <&vdd_1v8>;
	};

	thermal-zones {
		cpu-thermal {
			trips {
				cpu_shutdown_trip {
					temperature = <95000>;
					hysteresis = <1000>;
					type = "critical";
				};

				cpu_shutdown_warn {
					temperature = <93000>;
					hysteresis = <0>;
					type = "hot";
				};

				throttle-trip {
					temperature = <83000>;
					hysteresis = <1000>;
					type = "passive";
				};
			};
		};

		mem-thermal {
			trips {
				mem_shutdown_trip {
					temperature = <95000>;
					hysteresis = <1000>;
					type = "critical";
				};

				mem_shutdown_warn {
					temperature = <93000>;
					hysteresis = <0>;
					type = "hot";
				};

				mem_throttle_trip {
					temperature = <83000>;
					hysteresis = <1000>;
					type = "passive";
				};
			};
		};

		gpu-thermal {
			trips {
				gpu_shutdown_trip {
					temperature = <95000>;
					hysteresis = <1000>;
					type = "critical";
				};

				gpu_shutdown_warn {
					temperature = <93000>;
					hysteresis = <0>;
					type = "hot";
				};

				throttle-trip {
					temperature = <83000>;
					hysteresis = <1000>;
					type = "passive";
				};
			};
		};

		pllx-thermal {
			trips {
				pllx_shutdown_trip {
					temperature = <95000>;
					hysteresis = <1000>;
					type = "critical";
				};

				pllx_shutdown_warn {
					temperature = <93000>;
					hysteresis = <0>;
					type = "hot";
				};

				pllx_throttle_trip {
					temperature = <83000>;
					hysteresis = <1000>;
					type = "passive";
				};
			};
		};
	};

};
